{"remainingRequest":"/Users/mirkoskopljak/Desktop/projects/resume/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mirkoskopljak/Desktop/projects/resume/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mirkoskopljak/Desktop/projects/resume/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mirkoskopljak/Desktop/projects/resume/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/mirkoskopljak/Desktop/projects/resume/src/App.vue","mtime":1596456772842},{"path":"/Users/mirkoskopljak/Desktop/projects/resume/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirkoskopljak/Desktop/projects/resume/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mirkoskopljak/Desktop/projects/resume/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirkoskopljak/Desktop/projects/resume/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}